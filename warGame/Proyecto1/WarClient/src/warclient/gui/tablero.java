/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package warclient.gui;

/**
 *
 * @author da9ni5el
 */
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import java.awt.Dimension;
import java.io.IOException;
import java.util.concurrent.TimeoutException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.filechooser.FileNameExtensionFilter;
import warclient.Interfaces.Observador;

import warclient.LeerArchivo;
import warclient.conexion.RPCClient;

public class tablero extends javax.swing.JFrame implements Observador {

    /**
     * Creates new form tablero
     */
    LeerArchivo lra = new LeerArchivo();

    RPCClient rpc = new RPCClient();
    Matriz matriz;

    int cantx;
    int canty;

    String prompt = "WarClient dice>> ";

    //      turno = 0 -> jugador 1 || turno = 1 ->jugador 2
    private int turno;
    private boolean JUEGOINICIADO;
    private Log log = new Log();

    public tablero() throws IOException, TimeoutException {
        initComponents();
        cantx = 0;
        canty = 0;
        turno = 0;
        jtxtAreaLog.setText(prompt + "Â¡Bienvenido!\n");
//        contenedorTablero.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        contenedorTablero.setPreferredSize(new Dimension(800,300));
//        contenedorTablero.setBorder(new );
        this.revalidate();
        this.repaint();
        
        matriz = new Matriz(contenedorTablero, this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contenedorTablero = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtxtAreaLog = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btnEndTurno = new javax.swing.JButton();
        jlblJ1 = new javax.swing.JLabel();
        jlblJ2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        filej1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        filej2 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("WarClient");
        setResizable(false);

        contenedorTablero.setBorder(javax.swing.BorderFactory.createTitledBorder("MAPA DE JUEGO"));

        javax.swing.GroupLayout contenedorTableroLayout = new javax.swing.GroupLayout(contenedorTablero);
        contenedorTablero.setLayout(contenedorTableroLayout);
        contenedorTableroLayout.setHorizontalGroup(
            contenedorTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 787, Short.MAX_VALUE)
        );
        contenedorTableroLayout.setVerticalGroup(
            contenedorTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtxtAreaLog.setEditable(false);
        jtxtAreaLog.setColumns(20);
        jtxtAreaLog.setFont(new java.awt.Font("DialogInput", 0, 10)); // NOI18N
        jtxtAreaLog.setRows(5);
        jtxtAreaLog.setToolTipText("Log de operaciones\n");
        jScrollPane1.setViewportView(jtxtAreaLog);

        jLabel1.setText("LOG");

        btnEndTurno.setText("Terminar Turno");
        btnEndTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEndTurnoActionPerformed(evt);
            }
        });

        jlblJ1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jlblJ1.setForeground(new java.awt.Color(255, 0, 0));
        jlblJ1.setText("Jugador 1");

        jlblJ2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jlblJ2.setForeground(new java.awt.Color(0, 0, 204));
        jlblJ2.setText("Jugador 2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jlblJ1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlblJ2)
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(btnEndTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblJ2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlblJ1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(83, 83, 83)
                .addComponent(btnEndTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        filej1.setText("Archivo");

        jMenuItem1.setText("Archivo jugador 1");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        filej1.add(jMenuItem1);

        filej2.setText("Archivo jugador 2");
        filej2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filej2ActionPerformed(evt);
            }
        });
        filej1.add(filej2);

        jMenuBar1.add(filej1);

        jMenu1.setText("Herramientas");

        jMenuItem2.setText("Solicitar Tablero");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Iniciar Juego");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(contenedorTablero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(contenedorTablero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void escribirLog(String args) {
//        String logActual = jtxtAreaLog.getText();

        jtxtAreaLog.append(prompt + args + "\n");
    }

    //filej1
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        String path = seleccionarArchivo();
        if (path != null) {
            try {
                lra.leer(path, 11);
                escribirLog("Archivo de Tropas para JUGADOR 1 ha sido cargado");
            } catch (Exception ex) {
                Logger.getLogger(tablero.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void filej2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filej2ActionPerformed
        String path = seleccionarArchivo();
        if (path != null) {
            try {
                lra.leer(path, 12);
                escribirLog("Archivo de Tropas para JUGADOR 2 ha sido cargado");
            } catch (Exception ex) {
                Logger.getLogger(tablero.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_filej2ActionPerformed

    private String seleccionarArchivo() {
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo de Tropas", "army");
        jfc.setFileFilter(filter);
        int returnVal = jfc.showOpenDialog(jMenuBar1);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            return jfc.getSelectedFile().getAbsolutePath();
        }
        return null;
    }

    //  Solicitar Tablero
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:

        StringBuffer buffer = new StringBuffer();
        buffer.append("{\n");
        buffer.append("\"typeOperation\": 2");
        buffer.append("\n}");

        try {
            
            String response = "";
            if (!matriz.getEsllena()) {
                response = rpc.solicitarTamTablero(buffer.toString());
                procesarTam(response);

            }

            if (cantx > 0 && canty > 0) {
                contenedorTablero = matriz.generarMatriz(cantx, canty);
                response = rpc.solicitarTextura();
                String tropas = rpc.solicitarTropas();
                if (matriz.getEsllena()) {

                    matriz.cargarTexturas(response);
                    matriz.cargarTropas(tropas);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(tablero.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    //Iniciar Juego
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
       
        if (matriz.getCARGACORRECTA()) {
            turno = 1;
            JUEGOINICIADO = true;
            matriz.setTurno(turno);
            matriz.setJUEGOINICIADO(JUEGOINICIADO);
            setBorder(jlblJ1);
            jMenuItem3.setEnabled(false);
        } else {
            escribirLog("No se puede inicializar el juego. \nRevise el Log para mas detalles");
        }

        //algunas otras consideraciones antes de empezar
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void setBorder(JLabel j) {
        j.setBorder(BorderFactory.createBevelBorder(0));
    }

    private void btnEndTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEndTurnoActionPerformed
        // TODO add your handling code here:
        turno = (turno == 1) ? 2 : 1;
        matriz.setTurno(turno);
        
        if(turno == 1) {
            setBorder(jlblJ1);
            jlblJ2.setBorder(null);
        }else {
            setBorder(jlblJ2);
            jlblJ1.setBorder(null);
        }
    }//GEN-LAST:event_btnEndTurnoActionPerformed

    private void procesarTam(String json) {
        JsonObject jo = (JsonObject) new JsonParser().parse(json);
        int status = jo.get("status").getAsInt();
        if (status == 200) {// la peticion se resolvio bien
            cantx = jo.get("tamColumnas").getAsInt();
            canty = jo.get("tamFilas").getAsInt();
        } else {
            System.out.println("No se resolvio bien la peticion");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEndTurno;
    private javax.swing.JPanel contenedorTablero;
    private javax.swing.JMenu filej1;
    private javax.swing.JMenuItem filej2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlblJ1;
    private javax.swing.JLabel jlblJ2;
    private javax.swing.JTextArea jtxtAreaLog;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Object q) {
        String mensaje = (String) q;
        escribirLog(mensaje);
    }
}
